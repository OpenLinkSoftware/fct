<?vsp
declare val_serviceId, val_sid, val_sidRealm, val_uname, val_webidGraph varchar;
declare val_isRealUser, val_auth_method integer;
declare val_cert any;

val_serviceId := null;
val_uname := null;
val_sid := null;
val_isRealUser := 0;
val_auth_method := 0; -- 0: no authentication, 1: session ID, 2: WebID, 3: HTTP 
val_cert := null;
val_webidGraph := null;
val_sidRealm := null;

if (val_vad_present = 1) {

  -- Need to be dba for VAL auth procedures
  set_user_id ('dba');

  -- =========================================================================================
  -- Check authentication: session ID, WebID, HTTP Auth, and optionally map to a user account 
  -- =========================================================================================
  val_webidGraph := uuid();
  val_cert := null;

  if (__proc_exists ('VAL.DBA.get_authentication_details_for_connection')) {
    VAL.DBA.get_authentication_details_for_connection (
      sid=>val_sid,
      serviceId=>val_serviceId,
      uname=>val_uname,
      isRealUser=>val_isRealUser,
      realm=>val_sidRealm,
      cert=>val_cert);
  }
  else {
    -- Backwards compatibility
    val_cert := client_attr ('client_certificate');
    VAL.DBA.authentication_details_for_connection (
      sid=>val_sid,
      serviceId=>val_serviceId,
      uname=>val_uname,
      isRealUser=>val_isRealUser,
      realm=>val_sidRealm,
      cert=>val_cert);
  }
}
?>
