<?vsp
declare val_serviceId, val_sid, val_sidRealm, val_uname, val_webidGraph varchar;
declare val_isRealUser, val_auth_method integer;
declare val_cert any;

val_serviceId := null;
val_uname := null;
val_sid := null;
val_isRealUser := 0;
val_auth_method := 0; -- 0: no authentication, 1: session ID, 2: WebID, 3: HTTP 
val_cert := null;
val_webidGraph := null;
val_sidRealm := null;

if (val_vad_present = 1) {

  -- Need to be dba for VAL auth procedures
  set_user_id ('dba');

  -- =========================================================================================
  -- Check authentication: session ID, WebID, HTTP Auth, and optionally map to a user account 
  -- =========================================================================================
  val_webidGraph := uuid();
  val_cert := client_attr ('client_certificate');
  val_auth_method := VAL.DBA.authentication_details_for_connection (
    val_sid, val_serviceId, val_uname, val_isRealUser, val_sidRealm, 'sid', val_cert, val_webidGraph);

  -- =========================================================================================
  -- Remove the session ID if logout was requested
  -- =========================================================================================
  if ({?'action'} = 'logout') {
    if (not val_sid is null and not val_serviceId is null) {
      -- Remove the session and cookie
      VAL.DBA.logout (val_sid);

      -- Reset local variables
      val_serviceId := null;
      val_uname := null;
      val_sid := null;
      val_isRealUser := 0;
      val_auth_method := 0;
    }
  }
}
?>
